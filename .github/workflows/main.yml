name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok
    - name: Set ngrok authtoken
      run: .\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Create and keep ngrok tunnel running
      id: create_ngrok_tunnel
      run: |
        ngrok_output=$(.\ngrok\ngrok.exe tcp 3389)
        echo "::set-output name=ngrok_endpoint::$(echo $ngrok_output | grep -o 'tcp://.*')"
      shell: bash
    - name: Connect to Remote Desktop
      run: |
        echo "Remote Desktop endpoint: ${{ steps.create_ngrok_tunnel.outputs.ngrok_endpoint }}"
      shell: bash
